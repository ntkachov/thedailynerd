[{"title":"Android 22 Notable API Changes","blurb":"New notable API changes include, Referrers in Activities, A few screen new Wear notification settings new screen, URI schemes, and a bunch of Web View apis became Abstract","body":"<p> Referrers were added to activities as well as intents, but they aren't trustworthy since they are easily spoofed. <a class=\"link\" href=\"http://developer.android.com/reference/android/app/Activity.html#getReferrer()\"> Activity.getReferer() </a> </p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/app/KeyguardManager.html#isDeviceLocked()\"> isDeviceLocked() was dded to the KeyguardManager</a>, making it possible to check if there is a password required to unlock the screen. </p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html\"> Screen timeouts and cancel/progress labels for wearable notifications were added.</a> Supposedly wear will support progress and cancel progress notifications. Useful for uploads/downloads. </p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/content/Intent.html#URI_ANDROID_APP_SCHEME\"> URI_ANDROID_APP_SCHEME was added to send intents directly into an application using a URI scheme. </a></p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/R.attr.html#revisionCode\"> Revision code was added for support of versioning split APKs. </a> So now your multi-apk apps can be versioned independently of each other. <a class=\"link\" href=\"http://developer.android.com/reference/android/content/pm/PackageInfo.html#baseRevisionCode\"> You can also grab the revision code in the PackageInfo class</a>. Note: Revision code and Version code are similar and revision code should only be used when the version codes are the same.</a> </p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/content/res/Resources.html#getDrawable(int)\"> <b>Resources.getDrawable was depreciated!!! </b></a> Chet wants you to use GetDrawable(int, Theme) now and pass null as the theme if you don't need a theme applied. My guess is that this is because of the new tinting features. </p> <p> <a class=\"link\" href=\"http://developer.android.com/sdk/api_diff/22/changes/android.media.tv.TvContract.Programs.Genres.html\"> We got a few new Genres hardcoded into android. Tech_Science being my favorite. </a></p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/view/Window.html\"> Window got setClipToOutline and setElevation methods </a> clipToOutline clips the back of the window to the background and the elevation is a very slow way to set the elevation of the window. My guess is that this is for dialogs or activity transitions. Also don't animate the setElevation of the window as this is really slow. </p> <p> <a class=\"link\" href=\"http://developer.android.com/reference/android/util/DisplayMetrics.html#DENSITY_280\"> We got Density_280 added. Which is an odd number. Maybe something related to a new phone with 280 dpi? </a> </p> <p> Less notable changes: </p> <p> Animations were refactored. A few web APIs became abstract. And Apache.http was depreciated. </p>","tags":"api 22","time":"Wed, March 11 - 2015","uri":"android-22-changes"},{"blurb":"So I've released Simple Photo Watch Face after about a month of work. There was quite a bit of work around figuring out and learning the Wear API as well as perfecting the drawing code for the watch face. But overall I have a solid start to my next project.","body":"<p>A few short interesting things to note: </p>\n<p>\nThe wear API communicates over bluetooth, so sending large images can take quite a bit of time. Sending 100KB at a time, the wear API needs to break up any large files into smaller chunks. Meaning sending a 200kb file is the same as sending 2 100kb files. This overhead results in some slow transfers of larger files. Crunching files down to their most necessary sizes is essential. Bitmaps should be compressed down to their target sizes when transferring.</p>\n<p>\nCommunicating between the watch and the phone using data Items is fast, but not instant. Its worth while to kick off any data request to the watch well before you need that data. </p>\n\n<p>The status bar of the watch api doesn't change unless you call super.onVisibilityChanged(). So if switching watch faces keeps the system clock, you forgot to call super.onVisibilityChanged(). </p>\n\n<p> Changing the bounds inside onDraw affects the redraw of the screen. You can prevent certain parts of the screen from being redrawn by changing the bounds inside onDraw. </p> \n\n<p> More to come </p>","tags":"Android wear ","time":"Sat, Feb 7 - 2015","title":"Simple Photo Watch Face","uri":"simply-photo-watch"},{"blurb":"Desktop OSes have a help menu prominently in place on every app. Windows even dedicates an entire key to brining up the help section. So why don't any mobile OSes have built in help buttons or frameworks? ","body":"<p> The platforms have gotten so advanced that some of the apps for Android are starting to push into desktop territory. Heck, full IDEs exist on Android that let you make Android apps within Android.  </p>\n<p> This functionality has to be documented somewhere right? Well, no. Unless the dev has gone out of their way to put in what amounts to an extra app inside their app, help features for apps are usually a popup dialog with some shoddy written help text detailing the basics of the app.</p>\n<p>I think help menus are just as important for mobile apps as they are for desktop apps. Especially since mobile apps are starting to become more and more fleshed out with serious features which need documentation. Even Googles flagship Drive app has shoddy help. Lets walk through the experience of getting help with Drive.</p>\n<p> I start off where I left off, reading some document. Where is the help button? No where to be found. Its flat out not on this page. I have to back out into the documents list.  Now where is it? I have to click on the overflow menu on the top right hand corner and only then do I get a button \"Help\". When I click it, it opens up the browser and loads support.google. Not only does it not know I'm on an android device, the entire website is slow and clunky. </p> \n<p> The actual help page for the Google drive is actually really good, but getting what I need takes far too long. All I wanted was to figure out how to edit a comment.</p>","tags":"","time":"Mon, Nov 5 - 2012","title":"Why don't mobile OSes have built in help features for apps? ","uri":"mobile-help-menu"},{"blurb":"Cuss is a program I wrote to grab all of my silly CSS files and mark which CSS selectors I wasn't using. Usually after I'm done developing my websites I have a bunch of little CSS selectors that I haven't used. Cuss will notify you of all of these. Cuss will work with most css selectors detailed in CSS 3 including more complicated ones like child selectors. \n","body":"<br>\n<a  href=\"https://github.com/ntkachov/cuss\" class=\"link\"> If you're interested, heres the github page </a>","tags":"cuss ","time":"Sat, Aug 2 - 2012","title":"Cuss: The Unused CSS Selector Scanner","uri":"cuss-css-scanner"},{"blurb":"Sometimes, people want to get in touch. So heres some contact info.","body":"<h3> Nick Tkachov </h3>\n<br>\n<h3> nick at thedailynerd.com </h3>\n<br><br>\n<p> I do apologize for not linking directly or including the @. But you have to understand that this is just a small step to preventing mass spam from flooding my inbox. </p>\n","tags":"contact me","time":"Fri, Aug 1 - 2012","title":"Contact Me","uri":"contact-me"}]